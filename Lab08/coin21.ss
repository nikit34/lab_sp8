(define VARIANT 24)
(define LAST-DIGIT-OF-GROUP-NUMBER 8)
(define KINDS-OF-COINS 6)
(define(NOT? x?)(= 0(cond (x? 1) (#t 0))))
(define(AND? x? y?)(NOT?(AND? x? y?)))
(define (PB? x y) (AND? (NOT?(> y x)) (NOT? (= x y))))


  (define (first-denomination kinds-of-coins)
        (cond ((= kinds-of-coins 1) 1)
        (#t (cond((= kinds-of-coins 2) 2)
        (#t (cond((= kinds-of-coins 3) 15)
        (#t (cond((= kinds-of-coins 4) 20)
        (#t (cond((= kinds-of-coins 5) 25)
        (#t (cond((= kinds-of-coins 6) 50)
        (#t 0)
        ))))))))))))

(define (count-change amount)
  (display "______\namount: ")
  (display amount)
  (newline)
  (display "KINDS-OF-COINS: ")
  (display KINDS-OF-COINS)
  (newline)
  (cond ((AND?(AND? (PB? amount 0) (PB? kinds-of-coins 0)) (PB?(first-denomination kinds-of-coins) 0)) (cc amount kinds-of-coins))
            (#t 0))

)

(define (implication? x? y?)
  (and (NOT? x?) (NOT? y?))
  )

(define (cc amount kinds-of-coins)
  (cond ((= amount 0) 1)
        (#t (cond ((implication? (> amount 0) (= kinds-of-coins 0)) 0)
(#t (+ (cc amount (+ kinds-of-coins -1))
(cc (+ amount (- (first-denomination kinds-of-coins))) kinds-of-coins)))
)
)
)
)

(define (denomination-list kinds-of-coins)
  (cond ((= kinds-of-coins 0)
          0)
         (#t (denomination-list (- kinds-of-coins 1)))
    )
  )


(define (GR-AMOUNT)
  (remainder (+ (* 100 LAST-DIGIT-OF-GROUP-NUMBER) VARIANT) 231)
  )


(display "Variant ")
(display VARIANT)
(newline)
(newline)
(display (count-change 100)) (newline)
(display (count-change (GR-AMOUNT))) (newline)
(set! KINDS-OF-COINS 13)
(display (count-change 100)) (newline)
(display "(c) Permyakov N.A. 2021\n")