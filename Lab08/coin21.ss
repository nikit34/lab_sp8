(define VARIANT 24)
(define LAST-DIGIT-OF-GROUP-NUMBER 8)
(define KINDS-OF-COINS 6)

(define (first-denomination kinds-of-coins)
  (cond ((= kinds-of-coins 1) 1)
        ((= kinds-of-coins 2) 2)
        ((= kinds-of-coins 3) 15)
        ((= kinds-of-coins 4) 20)
        ((= kinds-of-coins 5) 25)
        ((= kinds-of-coins 6) 50)
        (else 0)
        )
  )

(define (count-change amount)
  (display "______\namount: ")
  (display amount)
  (newline)
  (display "KINDS-OF-COINS: ")
  (display KINDS-OF-COINS)
  (newline)
  (let()
       (define largest-coin (first-denomination KINDS-OF-COINS))
       (display "largest-coin: ")
       (display largest-coin)
       (newline)
        (cond ((and (> amount 0) (> KINDS-OF-COINS 0) (> largest-coin 0))
               (display "List of coin denominations: ")
               (denomination-list KINDS-OF-COINS)
               (display "count-change= ")
               (cc amount KINDS-OF-COINS)
               )
              (else (display "Improper parameter value!\ncount-change= ") -1)
        )
  )
)

(define (pier? x? y?)
  (not (or x? y?))
  )

(define (cc amount kinds-of-coins)
  (cond ((= amount 0) 1)
        ((pier? (< amount 0) (= kinds-of-coins 0))
         (+ (cc amount (- kinds-of-coins 1)) (cc (- amount (first-denomination kinds-of-coins)) kinds-of-coins)))
         (else 0)
    )
  )

(define (denomination-list kinds-of-coins)
  (cond ((= kinds-of-coins 0)
         (newline) 0)
         (else (display (first-denomination kinds-of-coins))
               (display " ")
               (denomination-list (- kinds-of-coins 1))
           )
    )
  )


(define (GR-AMOUNT)
  (remainder (+ (* 100 LAST-DIGIT-OF-GROUP-NUMBER) VARIANT) 231)
  )


(display "Variant ")
(display VARIANT)
(newline)
(newline)
(display (count-change 100)) (newline)
(display (count-change (GR-AMOUNT))) (newline)
(set! KINDS-OF-COINS 13)
(display (count-change 100)) (newline)
(display "(c) Permyakov N.A. 2021\n")