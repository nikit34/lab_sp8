(define VARIANT 24)
(define LAST-DIGIT-OF-GROUP-NUMBER 8)
(define kinds-of-coins 6)
(define(NOT? x?)(= 0(cond (x? 1) (#t 0))))


  (define (first-denomination kinds-of-coins)
        (cond ((= kinds-of-coins 1) 1)
        (#t (cond((= kinds-of-coins 2) 2)
        (#t (cond((= kinds-of-coins 3) 15)
        (#t (cond((= kinds-of-coins 4) 20)
        (#t (cond((= kinds-of-coins 5) 25)
        (#t (cond((= kinds-of-coins 6) 50)
        (#t 0)
        ))))))))))))

(define (count-change amount kinds-of-coins)
  (display "______\namount: ")
  (display amount)
  (newline)
  (display "KINDS-OF-COINS: ")
  (display kinds-of-coins)
  (newline)
  (cond ((> amount 0) (cond ((> kinds-of-coins 0)
                            (cond((> (first-denomination kinds-of-coins) 0) (cc amount kinds-of-coins))
                            (#t (let() (display "(improper parameter value) ") 0)))
                            )
                            (#t (let() (display "(improper parameter value) ") 0))))
                            (#t (let() (display "(improper parameter value) ") 0))
                            )
)

(define (pier? x? y?)
  (and (NOT? x?) (NOT? y?))
  )

(define (cc amount kinds-of-coins)
  (cond((= amount 0) 1)
       (#t (cond((pier? (> 0 amount)(= kinds-of-coins 0))
        (+ (cc amount (- kinds-of-coins 1))
           (cc (- amount (first-denomination kinds-of-coins)) kinds-of-coins))
       )
       (#t 0)))
  )
)


(define (denomination-list kinds-of-coins)
  (cond ((= kinds-of-coins 0)
          0)
         (#t (denomination-list (- kinds-of-coins 1)))
    )
  )


(define (GR-AMOUNT)
  (remainder (+ (* 100 LAST-DIGIT-OF-GROUP-NUMBER) VARIANT) 231)
  )


(display "Variant ")
(display VARIANT)
(newline)
(newline)
(display (count-change 100 kinds-of-coins)) (newline)
(display (count-change (GR-AMOUNT) kinds-of-coins)) (newline)
(display (count-change 100 kinds-of-coins)) (newline)
(display "(c) Permyakov N.A. 2021\n")