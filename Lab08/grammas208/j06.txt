# $j06
      $id      $idq      $dec      $int 
    $bool      $str         (         ) 
        +         -         *         / 
        <         =         >        <= 
       >=       and       not        or 
     cond      else        if       let 
   define   display   newline      set! 

#
        S -> PROG #1
     PROG -> CALCS #2 |
             DEFS #3 |
             DEFS CALCS #4
        E -> $id #5 |
             $int #6 |
             $dec #7 |
             AREX #8 |
             COND #9 |
             EASYLET #10 |
             CPROC #11
  EASYLET -> HEASYL E ) #12
   HEASYL -> ( let ( ) #13 |
             HEASYL INTER #14
     AREX -> HAREX E ) #15
    HAREX -> ( AROP #16 |
             HAREX E #17
     AROP -> + #18 |
             - #19 |
             * #20 |
             / #21
    CPROC -> HCPROC ) #22
   HCPROC -> ( $id #23 |
             HCPROC E #24
     COND -> ( cond BRANCHES ) #25
 BRANCHES -> CLAUS ELSE #26
    CLAUS -> ( BOOL E ) #27
     ELSE -> ( else ELSEB ) #28
    ELSEB -> E #29 |
             INTER ELSEB #30
      STR -> $str #31 |
             SCOND #32
    SCOND -> ( cond SBRANCHES ) #33
SBRANCHES -> SELSE #34 |
             SCLAUS SBRANCHES #35
   SCLAUS -> ( BOOL STR ) #36
    SELSE -> ( else STR ) #37
     BOOL -> $bool #38 |
             $idq #39 |
             REL #40 |
             CPRED #41
    CPRED -> HCPRED ) #42
   HCPRED -> ( $idq #43 |
             HCPRED ARG #44
      ARG -> E #45 |
             BOOL #46
      REL -> ( = E E ) #47 |
             ( >= E E ) #48
      SET -> HSET E ) #49
     HSET -> ( set! $id #50
  DISPSET -> ( display E ) #51 |
             ( display BOOL ) #52 |
             ( display STR ) #53 |
             ( newline ) #54 |
             SET #55
    INTER -> DISPSET #56 |
             E #57
    CALCS -> CALC #58 |
             CALCS CALC #59
     CALC -> E #60 |
             BOOL #61 |
             STR #62 |
             DISPSET #63
     DEFS -> DEF #64 |
             DEFS DEF #65
      DEF -> PRED #66 |
             VAR #67 |
             PROC #68
     PRED -> HPRED BOOL ) #69
    HPRED -> PDPAR ) #70
    PDPAR -> ( define ( $idq #71 |
             PDPAR $idq #72 |
             PDPAR $id #73
      VAR -> VARDCL E ) #74
   VARDCL -> ( define $id #75
     PROC -> HPROC BLOCK ) #76 |
             HPROC E ) #77
    HPROC -> PCPAR ) #78 |
             HPROC INTER #79
    PCPAR -> ( define ( $id #80 |
             PCPAR $id #81
    BLOCK -> HBLOCK E ) #82
   HBLOCK -> BLVAR ) #83 |
             HBLOCK INTER #84
    BLVAR -> ( let ( LOCDEF #85 |
             BLVAR LOCDEF #86
   LOCDEF -> ( $id E ) #87

