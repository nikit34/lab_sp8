# $n31
      $id      $idq      $dec      $int 
    $bool      $str         (         ) 
        +         -         *         / 
        <         =         >        <= 
       >=       and       not        or 
     cond      else        if       let 
   define   display   newline      set! 

#
        S -> PROG #1
     PROG -> CALCS #2 |
             DEFS #3 |
             DEFS CALCS #4
        E -> $id #5 |
             $int #6 |
             $dec #7 |
             AREX #8 |
             COND #9 |
             EASYLET #10 |
             CPROC #11
  EASYLET -> HEASYL E ) #12
   HEASYL -> ( let ( ) #13 |
             HEASYL INTER #14
     AREX -> HAREX E ) #15
    HAREX -> ( AROP #16 |
             HAREX E #17
     AROP -> + #18 |
             - #19 |
             * #20 |
             / #21
    CPROC -> HCPROC ) #22
   HCPROC -> ( $id #23 |
             HCPROC E #24
     COND -> ( cond BRANCHES ) #25
 BRANCHES -> CLAUS ELSE #26
    CLAUS -> ( BOOL E ) #27
     ELSE -> ( else E ) #28
      STR -> $str #29 |
             SCOND #30
    SCOND -> ( cond SBRANCHES ) #31
SBRANCHES -> SELSE #32 |
             SCLAUS SBRANCHES #33
   SCLAUS -> ( BOOL STR ) #34
    SELSE -> ( else STR ) #35
     BOOL -> $bool #36 |
             $idq #37 |
             REL #38 |
             AND #39 |
             CPRED #40
    CPRED -> HCPRED ) #41
   HCPRED -> ( $idq #42 |
             HCPRED ARG #43
      ARG -> E #44 |
             BOOL #45
      REL -> ( = E E ) #46 |
             ( <= E E ) #47
      AND -> HAND BOOL ) #48
     HAND -> ( and #49 |
             HAND BOOL #50
      SET -> HSET E ) #51
     HSET -> ( set! $id #52
  DISPSET -> ( display E ) #53 |
             ( display BOOL ) #54 |
             ( display STR ) #55 |
             ( newline ) #56 |
             SET #57
    INTER -> DISPSET #58 |
             E #59
    CALCS -> CALC #60 |
             CALCS CALC #61
     CALC -> E #62 |
             BOOL #63 |
             STR #64 |
             DISPSET #65
     DEFS -> DEF #66 |
             DEFS DEF #67
      DEF -> PRED #68 |
             VAR #69 |
             PROC #70
     PRED -> HPRED BOOL ) #71
    HPRED -> PDPAR ) #72
    PDPAR -> ( define ( $idq #73 |
             PDPAR $idq #74 |
             PDPAR $id #75
      VAR -> VARDCL E ) #76
   VARDCL -> ( define $id #77
     PROC -> HPROC BLOCK ) #78 |
             HPROC E ) #79
    HPROC -> PCPAR ) #80 |
             HPROC INTER #81
    PCPAR -> ( define ( $id #82 |
             PCPAR $id #83
    BLOCK -> HBLOCK E ) #84
   HBLOCK -> BLVAR ) #85 |
             HBLOCK INTER #86
    BLVAR -> ( let ( LOCDEF #87 |
             BLVAR LOCDEF #88
   LOCDEF -> ( $id E ) #89

